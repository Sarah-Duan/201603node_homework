
var fs = require("fs")
var path=require("path");
fs.mkdirP = function (scr, callback) {
    if(Object.prototype.toString.call(scr)=="[object String]")new  TypeError("scr类型错误")
    if(callback?Object.prototype.toString.call(callback)=="[object Function]":null)new  TypeError("callback类型错误")
    var arr = scr.split(/\//);
    str = "";
    var flag = false;
    var length = arr.length;
    arr.forEach(function (item, index) {
        str += item.toString();
        flag = fs.existsSync(str)
        if (!flag) {
            try {
                fs.mkdirSync(str);
                if(index==length-1){
                    console.log("success dir");
                    callback();
                }
            } catch (e) {
                console.log(e);
            }
        }

        str += "/";

    })


}
//fs.mkdirP("./v/r/t/u")




var tree = {
    value: 1,
    left: {
        value: 2,
        left: {
            value: 4
        }
    },
    right: {
        value: 3,
        left: {
            value: 5,
            left: {
                value: 7
            },
            right: {
                value: 8
            }
        },
        right: {
            value: 6
        }
    }
}
console.log(tree)
//levelOrderTraversal(tree)

var preOrder = function (node) {
    if (node) {
        console.log(node.value);
        preOrder(node.left);
        preOrder(node.right);
    }
}